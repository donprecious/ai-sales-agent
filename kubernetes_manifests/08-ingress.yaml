apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sales-rep-ai-ingress
  namespace: sales-rep-ai-ns # Matches the namespace created earlier
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb # Specifies that AWS ALB should handle this Ingress
    alb.ingress.kubernetes.io/scheme: internet-facing # Creates an internet-facing ALB
    alb.ingress.kubernetes.io/target-type: ip # Routes traffic directly to pod IPs for better performance
    # Optional: Add health check path for ALB target groups if different from service readiness probe
    # alb.ingress.kubernetes.io/healthcheck-path: /health # Example, if frontend has a specific health endpoint
    # Optional: Specify SSL/TLS certificate ARN from AWS Certificate Manager (ACM)
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:YOUR_AWS_REGION:YOUR_AWS_ACCOUNT_ID:certificate/YOUR_CERTIFICATE_ID
    # Optional: Redirect HTTP to HTTPS
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  # Default backend rule: All traffic not matching other rules goes to the frontend service
  # If using SSL redirect, this default backend might be part of the redirect rule.
  defaultBackend:
    service:
      name: frontend-service # Name of the frontend Kubernetes Service
      port:
        number: 80 # Port on the frontend-service to route traffic to
  rules:
    # You can define host-based or path-based rules here.
    # Example: If you have a custom domain, you would specify it here.
    # - host: your-domain.com
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: frontend-service
    #             port:
    #               number: 80
    # If you need to expose backend API endpoints directly via Ingress (e.g., /api/*)
    # - http:
    #     paths:
    #       - path: /api # Path for backend API calls
    #         pathType: Prefix # Matches any path starting with /api
    #         backend:
    #           service:
    #             name: backend-service # Name of the backend Kubernetes Service
    #             port:
    #               number: 80 # Port on the backend-service (which maps to backend container's 3000)
    # For now, assuming frontend handles all UI and proxies API calls, or backend is not directly exposed.
    # If no host is specified, the Ingress applies to the ALB's DNS name.
    - http:
        paths:
          - path: / # Default path for all traffic
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          # Uncomment and adjust the following if you want to expose backend APIs directly
          # - path: /api
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: backend-service
          #       port:
          #         number: 80 # This is the backend-service's port, not the container's targetPort directly
# ---
# IMPORTANT:
# 1. The AWS Load Balancer Controller must be installed and configured on your EKS cluster
#    for this Ingress resource to provision an AWS Application Load Balancer.
# 2. Replace placeholders for certificate ARN if using HTTPS.
# 3. Review and adjust health check paths, target types, and other annotations as needed for your specific setup.